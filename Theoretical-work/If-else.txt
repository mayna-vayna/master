
15. Условные операторы. Ветвление в C++. Опишите какие есть способы и
особенности использования в C++


Ответ:  

Операторы сравнения как и в математике примерно похожие:
 
> - больше, < -меньше. == - равно, != - не равно, >= - больше равно,
<= - меньше равно 

при их использование и сравнении возващается тип bool  и обычно операторы сравнения 
используют с условными опреаторами if ,else , else if c помощью которых и осуществляется 
ветвление. Очень частое использовании их не нужно потому что приводит к костылю
и плохому коду, обычно используются в местах где может произойти ошибка и остановиться программа,
что если какое то выражение возвращает например null  сделать return 0. Или при логическом ветвлении перевести на другое значение 
при разных значениях условия. Часто в этих конструкциях if else используется || или - хотябы одно значение true, && и - 
все значения true. Если условие if  неверно мы попадем в else , но есть и else if () которое для промежуточнойлогической проверке 

примером использовния if else  возьму из другого языка с# и ничем не отличается от с++

bool isJumping = _direction.y > 0;
       
        if (isJumping)
        {
            if (isGround() && _rigidbody.velocity.y <= 0)
            {
                _rigidbody.AddForce(Vector2.up * _jumpSpeed, ForceMode2D.Impulse);
            }  
        }
        else if (_rigidbody.velocity.y > 0)
        {
            _rigidbody.velocity = new Vector2(_rigidbody.velocity.x, _rigidbody.velocity.y * 0.5f);
        }

,или 

int a =10;

if(a==10)
{

cout <<"Hello dude";

}else {
cout<< "not found"
}